syntax = "proto3";

package cheers.ticket.v1;

import "google/api/annotations.proto";

option java_multiple_files = true;
option go_package = "github.com/salazarhugo/cheers1/gen/go/cheers/ticket/v1;ticket";

service TicketService {
  rpc CreateTicket (CreateTicketRequest) returns (CreateTicketResponse) {
    option (google.api.http) = {
      post: "/v1/tickets"
      body: "*"
    };
  }

  rpc GetTicket (GetTicketRequest) returns (GetTicketResponse) {
    option (google.api.http) = {
      get: "/v1/tickets/{ticket_id}"
    };
  }

  rpc UpdateTicket (UpdateTicketRequest) returns (UpdateTicketResponse) {
    option (google.api.http) = {
      patch: "/v1/tickets"
      body: "*"
    };
  }

  rpc DeleteTicket (DeleteTicketRequest) returns (DeleteTicketResponse) {
    option (google.api.http) = {
      delete: "/v1/tickets/{ticket_id}"
      body: "*"
    };
  }

  rpc ListTicket (ListTicketRequest) returns (ListTicketResponse) {
    option (google.api.http) = {
      get: "/v1/tickets"
    };
  }
}


message Ticket {
  string id = 1;
  // Price of the ticket
  int64 price = 2;
  // Number of available tickets to be sold
  uint32 quantity = 3;
  string name = 4;
  string description = 5;
  string partyId = 6;
  string party_name = 10;
  int64 party_start_time = 11;
  int64 party_end_time = 12;
  string location_name = 13;
  string organizer = 14;
  string paymentIntentId = 7;
  string userId = 8;
  bool validated = 9;
}

message CreateTicketRequest {
  Ticket ticket = 1;
}

message CreateTicketResponse {
  Ticket ticket = 1;
}

message GetTicketRequest {
  string ticket_id = 1;
}

message GetTicketResponse {
  Ticket ticket = 1;
}

message UpdateTicketRequest {
  Ticket ticket = 1;
}

message UpdateTicketResponse {
  Ticket ticket = 1;
}

message DeleteTicketRequest {
  string ticket_id = 1;
}

message DeleteTicketResponse {
}

message ListTicketRequest {
  oneof filter {
    string party_id = 1;
    string user_id = 2;
  }
}

message ListTicketResponse {
  repeated Ticket tickets = 1;
}
