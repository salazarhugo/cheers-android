syntax = "proto3";

package cheers.location.v1;

import "google/api/annotations.proto";

option java_multiple_files = true;
option go_package = "github.com/salazarhugo/cheers1/gen/go/cheers/location/v1;location";

service LocationService {
  rpc UpdateLocation (UpdateLocationRequest) returns (UpdateLocationResponse) {
    option (google.api.http) = {
      patch: "/v1/locations/{user_id}"
      body: "*"
    };
  }
  rpc UpdateGhostMode (UpdateGhostModeRequest) returns (UpdateGhostModeResponse) {
    option (google.api.http) = {
      patch: "/v1/locations/ghost"
      body: "*"
    };
  }
  rpc ListFriendLocation (ListFriendLocationRequest) returns (ListFriendLocationResponse) {
    option (google.api.http) = {
      get: "/v1/locations/friends"
    };
  }

  rpc Geocode (GeocodeRequest) returns (GeocodeResponse) {
    option (google.api.http) = {
      get: "/v1/locations/geocode"
    };
  }

  rpc TextSearch (TextSearchRequest) returns (TextSearchResponse) {
    option (google.api.http) = {
      get: "/v1/locations/search"
    };
  }
}

message TextSearchRequest {
  string query = 1;
}

message TextSearchResponse {
  repeated Location locations = 1;
}

message GeocodeRequest {
  double latitude = 1;
  double longitude = 2;
}

message GeocodeResponse {
  repeated Location locations = 1;
}

message Location {
  string name = 1;
  string type = 2;
  double latitude = 3;
  double longitude = 4;
  string city = 5;
}

message ListFriendLocationRequest {
}

message ListFriendLocationResponse {
  repeated UserLocation items = 1;
}

message UserLocation {
  double latitude = 1;
  double longitude = 2;
  string user_id = 3;
  string name = 4;
  string username = 5;
  string picture = 6;
  bool verified = 7;
  string location_name = 8;
  int64 last_updated = 9;
}

message UpdateGhostModeRequest {
  bool ghost_mode = 1;
}

message UpdateGhostModeResponse {
}

message UpdateLocationRequest {
  string user_id = 1;
  // The latitude in degrees. It must be in the range [-90.0, +90.0].
  double latitude = 2;
  // The longitude in degrees. It must be in the range [-180.0, +180.0].
  double longitude = 3;
}

message UpdateLocationResponse {
}